on:
  workflow_call:
    inputs:
      KUBE_NAMESPACE: { required: true, type: string }
      REGISTRY: { required: false, type: string, default: ghcr.io }
      IMAGE_NAME: { required: true, type: string }
    secrets:
      KUBE_CERTIFICATE: { required: true }
      KUBE_TOKEN: { required: true }
      KUBE_HOST: { required: true }

env:
  IMAGE_REG: "${{ inputs.REGISTRY }}/${{ inputs.IMAGE_NAME }}"

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      tagVersion: ${{ steps.meta.outputs.version }}

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5.0.0
      - uses: docker/setup-buildx-action@v3.11.1
      - uses: docker/login-action@v3.5.0
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5.8.0
        with:
          images: "${{ env.IMAGE_REG }}"
          tags: |
            type=ref,priority=900,prefix=pr-,event=pr
            type=raw,priority=100,value=latest
            type=sha,priority=500,prefix=
        id: meta
      - uses: docker/build-push-action@v6.18.0
        id: build-and-push
        with:
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-to: type=gha,mode=max
          cache-from: type=gha
          context: .

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5.0.0
      - uses: imranismail/setup-kustomize@v2.1.0
      - run: kustomize edit set image ${{ env.IMAGE_REG }}=${{ env.IMAGE_REG }}:${{ needs.build.outputs.tagVersion }}
        name: Kustomize image tag=${{ needs.build.outputs.tagVersion }}
        working-directory: .deployment/base
      - uses: actions-hub/kubectl@v1.34.1
        name: Deploy (DRY-RUN)
        env:
          NAMESPACE: ${{ inputs.KUBE_NAMESPACE }}
          KUBE_HOST: ${{ secrets.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ secrets.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: -n ${{ env.NAMESPACE }} apply --dry-run="server" -k .deployment/overlays/prd
      - uses: actions-hub/kubectl@v1.34.1
        if: github.event_name != 'pull_request'
        name: Deploy (APPLY)
        env:
          NAMESPACE: ${{ inputs.KUBE_NAMESPACE }}
          KUBE_HOST: ${{ secrets.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ secrets.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: -n ${{ env.NAMESPACE }} apply -k .deployment/overlays/prd
